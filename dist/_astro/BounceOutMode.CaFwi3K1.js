const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["_astro/Utils.DQHsSxCL.js","_astro/sparkTitle.DCU_Odjx.js","_astro/cn.Bh4i3_zX.js","_astro/index.NEDEFKed.js","_astro/motion.DhRAmCJf.js"])))=>i.map(i=>d[i]);
import{ad as _,_ as b}from"./sparkTitle.DCU_Odjx.js";import"./cn.Bh4i3_zX.js";import"./index.NEDEFKed.js";import"./motion.DhRAmCJf.js";class w{constructor(o){this.container=o,this.modes=["bounce","split"]}async update(o,t,f,e){if(!this.modes.includes(e))return;const a=this.container;let s=!1;for(const[,n]of a.plugins)if(n.particleBounce!==void 0&&(s=await n.particleBounce(o,f,t)),s)break;if(s)return;const l=o.getPosition(),c=o.offset,i=o.getRadius(),r=_(l,i),u=a.canvas.size,{bounceHorizontal:d,bounceVertical:m}=await b(async()=>{const{bounceHorizontal:n,bounceVertical:p}=await import("./Utils.DQHsSxCL.js");return{bounceHorizontal:n,bounceVertical:p}},__vite__mapDeps([0,1,2,3,4]));d({particle:o,outMode:e,direction:t,bounds:r,canvasSize:u,offset:c,size:i}),m({particle:o,outMode:e,direction:t,bounds:r,canvasSize:u,offset:c,size:i})}}export{w as BounceOutMode};
