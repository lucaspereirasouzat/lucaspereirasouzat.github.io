const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["_astro/Grabber.C7Gtv6Pc.js","_astro/CanvasUtils.5nKfh4B1.js","_astro/sparkTitle.DCU_Odjx.js","_astro/cn.Bh4i3_zX.js","_astro/index.NEDEFKed.js","_astro/motion.DhRAmCJf.js","_astro/ExternalInteractorBase.CIi3zRdK.js","_astro/OptionsColor.BuOxyFYl.js"])))=>i.map(i=>d[i]);
import{_ as e}from"./sparkTitle.DCU_Odjx.js";import{O as s}from"./OptionsColor.BuOxyFYl.js";import"./cn.Bh4i3_zX.js";import"./index.NEDEFKed.js";import"./motion.DhRAmCJf.js";class c{constructor(){this.blink=!1,this.consent=!1,this.opacity=1}load(i){i&&(i.blink!==void 0&&(this.blink=i.blink),i.color!==void 0&&(this.color=s.create(this.color,i.color)),i.consent!==void 0&&(this.consent=i.consent),i.opacity!==void 0&&(this.opacity=i.opacity))}}class h{constructor(){this.distance=100,this.links=new c}load(i){i&&(i.distance!==void 0&&(this.distance=i.distance),this.links.load(i.links))}}async function p(n,i=!0){await n.addInteractor("externalGrab",async t=>{const{Grabber:o}=await e(async()=>{const{Grabber:r}=await import("./Grabber.C7Gtv6Pc.js");return{Grabber:r}},__vite__mapDeps([0,1,2,3,4,5,6,7]));return new o(t)},i)}export{h as Grab,c as GrabLinks,p as loadExternalGrabInteraction};
