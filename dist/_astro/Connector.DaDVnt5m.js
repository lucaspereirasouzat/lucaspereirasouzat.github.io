import{Connect as b}from"./index.BE6K8kUj.js";import{f as x}from"./CanvasUtils.5nKfh4B1.js";import{P as C,g,L as R,n as S,J as O}from"./sparkTitle.DCU_Odjx.js";import{E as w}from"./ExternalInteractorBase.CIi3zRdK.js";import"./cn.Bh4i3_zX.js";import"./index.NEDEFKed.js";import"./motion.DhRAmCJf.js";const p=0,y=1,k=0;function D(i,t,n,o){const e=Math.floor(n.getRadius()/t.getRadius()),s=t.getFillColor(),r=n.getFillColor();if(!s||!r)return;const d=t.getPosition(),a=n.getPosition(),l=C(s,r,t.getRadius(),n.getRadius()),c=i.createLinearGradient(d.x,d.y,a.x,a.y);return c.addColorStop(p,g(s,o)),c.addColorStop(R(e,p,y),S(l,o)),c.addColorStop(y,g(r,o)),c}function E(i,t,n,o,e){x(i,o,e),i.lineWidth=t,i.strokeStyle=n,i.stroke()}function L(i,t,n,o){const e=i.actualOptions,s=e.interactivity.modes.connect;if(s)return D(t,n,o,s.links.opacity)}function F(i,t,n){i.canvas.draw(o=>{const e=L(i,o,t,n);if(!e)return;const s=t.getPosition(),r=n.getPosition();E(o,t.retina.linksWidth??k,e,s,r)})}const H="connect",v=0;class T extends w{constructor(t){super(t)}clear(){}init(){const t=this.container,n=t.actualOptions.interactivity.modes.connect;n&&(t.retina.connectModeDistance=n.distance*t.retina.pixelRatio,t.retina.connectModeRadius=n.radius*t.retina.pixelRatio)}async interact(){const t=this.container;if(t.actualOptions.interactivity.events.onHover.enable&&t.interactivity.status==="pointermove"){const o=t.interactivity.mouse.position,{connectModeDistance:e,connectModeRadius:s}=t.retina;if(!e||e<v||!s||s<v||!o)return;const r=Math.abs(s),d=t.particles.quadTree.queryCircle(o,r,a=>this.isEnabled(a));d.forEach((a,l)=>{const c=a.getPosition(),M=1;for(const u of d.slice(l+M)){const f=u.getPosition(),m=Math.abs(e),h=Math.abs(c.x-f.x),P=Math.abs(c.y-f.y);h<m&&P<m&&F(t,a,u)}})}await Promise.resolve()}isEnabled(t){const n=this.container,o=n.interactivity.mouse,e=(t?.interactivity??n.actualOptions.interactivity).events;return e.onHover.enable&&o.position?O(H,e.onHover.mode):!1}loadModeOptions(t,...n){t.connect||(t.connect=new b);for(const o of n)t.connect.load(o?.connect)}reset(){}}export{T as Connector};
