import{C as c,R as o}from"./Circle.BsfAXaX2.js";import"./sparkTitle.DCU_Odjx.js";import"./cn.Bh4i3_zX.js";import"./index.NEDEFKed.js";import"./motion.DhRAmCJf.js";const n=2;class x extends c{constructor(e,t,i,s){super(e,t,i),this.canvasSize=s,this.canvasSize={...s}}contains(e){const{width:t,height:i}=this.canvasSize,{x:s,y:r}=e;return super.contains(e)||super.contains({x:s-t,y:r})||super.contains({x:s-t,y:r-i})||super.contains({x:s,y:r-i})}intersects(e){if(super.intersects(e))return!0;const t=e,i=e,s={x:e.position.x-this.canvasSize.width,y:e.position.y-this.canvasSize.height};if(i.radius!==void 0){const r=new c(s.x,s.y,i.radius*n);return super.intersects(r)}else if(t.size!==void 0){const r=new o(s.x,s.y,t.size.width*n,t.size.height*n);return super.intersects(r)}return!1}}export{x as CircleWarp};
